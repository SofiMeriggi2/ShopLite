name: CI
on: [push, pull_request]
jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: shoplite_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Enable Corepack
        run: corepack enable
      - name: Use Yarn 4
        run: corepack prepare yarn@4.10.2 --activate
      - name: Locate Yarn cache
        id: yarn-cache
        run: echo "dir=$(yarn config get cacheFolder)" >> "$GITHUB_OUTPUT"
      - name: Cache Yarn installation
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache.outputs.dir }}
            .yarn/install-state.gz
          key: yarn-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-cache-${{ runner.os }}-
      - run: yarn install --immutable
      - run: yarn build
      - run: yarn lint
      - run: yarn workspace @shoplite/backend prisma generate
      - run: yarn workspace @shoplite/backend prisma migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shoplite_test
      - run: yarn test:coverage
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            apps/**/coverage
            packages/**/coverage
